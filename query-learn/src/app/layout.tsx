import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}

//? HOC - обертка, которую можно юзать к определенным компонентам
// hoc/withGlobalFunction.js
// import { useEffect } from 'react';

// const withGlobalFunction = (WrappedComponent) => {
//   return (props) => {
//     useEffect(() => {
//       console.log('Эта функция выполняется в каждом компоненте с HOC');
//     }, []);

//     return <WrappedComponent {...props} />;
//   };
// };

// export default withGlobalFunction;

//todo package.json
//? "dev": "concurrently \"npm run dev:*\"", - запуск сразу нескольких
//? "dev:client": "next dev --turbopack",
//? "dev:server": "python /home/rickwilson/Desktop/Projects/pythonPrograms/fast-api/first-app/app/main.py",